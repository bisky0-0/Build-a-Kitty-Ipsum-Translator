builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echi hello bash
echo hello bash
echo hello bash > stdout.txt
>> stdout.txt
echo hello bash >> stdout.txt
echo hello bash >> stdout.txt
echo hello bash > stdout.txt
__vsc_prompt_cmd_original
> stdout.txt
bad_command
bad_command > stdout.txt
bad_command >> stdout.txt
bad_command > stderr.txt
stedrr > stderr.txt
stderr > stderr.txt
stderr 2> stderr.txt
stderr 2> stderr.txt
stderr2 > stderr.txt
stderr 2> stderr.txt
stderr > stderr.txt
stderr >> stderr.txt
bad_command 2> stderr.txt
echo hello bash > stdout.txt
read NAME
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
echo NAME
echo NAME
echo $NAME
echo $NAME > stdout
echo $NAME > stdout.txt
echo freecodecamp > name.txt
echo freeCodeCamp > name.txt
read NAME
read NAME name.txt
read NAME
echo $NAME
read NAME
echo $NAME
read NAME > name.txt
read NAME < name.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo $name
echo $NAME
echo $NAME < name.txt
echo $NAME > name.txt
echo $NAME < name.txt
echo Yasmeen
echo $NAME
cat
cat name.txt
cat name.txt > name.txt
cat name.txt >> name.txt
cat name.txt < name.txt
cat < name.txt
echo yasmeen
touch script.sh
chmod +x script.sh
./script.sh
echo Yasmeen
echo Yasmeen
echo Yasmeen
echo < name.ttx
echo < name.txt
echo < ./name.txt
./name.txt < echo
name.txt < echo
./script.sh < name.txt
./script.sh < name.txt 2> stderr.txt
./script.sh < name.txt 2> stderr.txt > stdout.txt
./kitty_ipsum_1.txt
echo ./kitty_ipsum_1.txt
./script.sh < kitty_ipsum_1.txt
cat ./kitt_ipsum_1.txt
cat < ./kitt_ipsum_1.txt
__vsc_prompt_cmd_original
cat < ./kitty_ipsum_1.txt
./kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
wc kitty_ipsum_1.txt
man wc
wc kitty_ipsum_1.txt -l
wc kitty_ipsum_1.txt -w
wc kitty_ipsum_1.txt -c
man wc
wc kitty_ipsum_1.txt -m
wc kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_1.txt
wc kitty_ipsum_2.txt < cat
wc < kitty_ipsum_2.txt
wc < kitty_ipsum_1.txt
echo ~~ kitty_ipsum_1.txt info ~~ > kitty_info.txt
echo "~~ kitty_ipsum_1.txt info ~~" >> kitty_info.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_info.txt
echo -e "\n Number of lines:" >> kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of characters: >> kitty_info.txt echo -e "\nNumber of characters: >> kitty_info.txt
__vsc_prompt_cmd_original
echo -e "\nNumber of character" >> kitty_info.txt
echo -e "\nNumber of characters" >> kitty_info.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_1.txt
wc -m kitty_ipsum_1.txt < cat
wc -m < kitty_ipsum_1.txt
wc kitty_ipsum_1.txt -m >> kitty_info.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
grep 'meow' kitty_ipusm_1.txt
grep 'meow' kitty_ipsum_1.txt
man grep
grep 'meow' kitty_ipsum_1.txt --color
grep 'meow' -n --color kitty_ipsum_1.txt --color
grep 'meow[a-z]*' -n --color kitty_ipsum_1.txt --color
__vsc_prompt_cmd_original
echo -e "\nNumberof times meow or meowzer appears:" >> kitty_info.txt
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep 'meow[a-z]*' -n --color kitty_ipsum_1.txt --color
man grep
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
man grep
grep -o --color 'meow[a-z]*'
grep -o --color 'meow[a-z]*' kitty_ipsum_1.txt
grep -o --color 'meow[a-z]*' kitty_ipsum_1.txt
wc -l -o --color 'meow[a-z]*' < grep
wc -l -o --color 'meow[a-z]*' kitty_apsum_1.txt < grep
wc -l
wc -l
wc -l
wc -l
wc -l-co 'w[a-lorz]*' kitty_ipsum_1.txt
grep --color 'meow[a-z]*' kitty_ipsum_1.txt
grep --c 'meow[a-z]*' kitty_ipsum_1.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
man grep
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
wc-l
wc -l
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o -c 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
echo -e "\nLines that they appear on:"
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep -n 'meow[a-z]*' kitty_ipsum.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man grep
__vsc_prompt_cmd_original
cat name.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
sed 's/r/2' stdout.txt
sed 's/r/2/' stdout.txt
sed 's/r/2/'
sed 's/r/2/' > stdout.txt
sed 's/r/2/' stdout.txt
sed 's/r/2/' name.txt
sed 's/ree/233/' name.txt
sed 's/ree/233/' name.txt
sed 's/free/f233/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/gi' name.txt
sed 's/freecodecamp/f233C0d3C@mp/g' name.txt
sed 's/freecodecamp/f233C0d3C@mp/ig' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt >> stdout.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt > stdout.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt < stdout.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt < name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
cat name.txt
grep -n --color 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man sed
man sed
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
